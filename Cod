import time
import pyttsx3
import speech_recognition as sr
import datetime
from fuzzywuzzy import fuzz
import webbrowser
import subprocess

opts= {
    "alias": ('кеша', 'кэша'),
    "tbr":('скажи','расскажи','покажи','сколько','произнеси'),
    "cmds":{
        "ctime":('текущее время','время','сейчас времени','который час'),
        "browzer":('открой яндекс', 'запусти яндекс'),
        "ecampus":('екампус', 'открой екампус'),
        "app":('приложение')
    }
}

#функция
def speak(what):
    print(what)
    speak_engine.say(what)
    speak_engine.runAndWait()
    speak_engine.stop()

def callback(recognizer, audio):
    try:
        voice = recognizer.recognize_google(audio, language="ru-RU").lower()
        print("[log] Распознано: "+ voice)
        if voice.startswith(opts["alias"]):
            cmd = voice
            for x in opts['alias']:
                cmd = cmd.replace(x, "").strip()
            for x in opts['tbr']:
                cmd = cmd.replace(x, "").strip()

            cmd = recognize_cmd(cmd)
            execute_cmd(cmd['cmd'])
    except sr.UnknownValueError:
        print("[log] Голос не распознан")
    except sr.RequestError as e:
        print("[log] Неизвестная ошибка")

def recognize_cmd(cmd):
    RC = {'cmd': '', 'percent': 0}
    for c,v in opts['cmds'].items():
        for x in v:
            vrt = fuzz.ratio(cmd, x)
            if vrt > RC['percent']:
                RC['cmd'] = c
                RC['percent'] = vrt
    return RC

def execute_cmd(cmd):
    if cmd == 'ctime':
        now = datetime.datetime.now()
        speak("Сейчас: "+ str(now.hour)+ " часов"+' :'+str(now.minute)+ " минут")
    elif cmd == 'browzer':
        url='https://yandex.ru/'
        webbrowser.open(url)
    elif cmd =='app':
        subprocess.Popen('')
    elif cmd == 'ecampus':
        url1 = 'https://ecampus.ncfu.ru/'
        webbrowser.open(url1)

#запуск
r = sr.Recognizer()
m = sr.Microphone(device_index=1)

with m as source:
    r.adjust_for_ambient_noise(source)

speak_engine = pyttsx3.init()

speak("Привет, я Кеша. И я готов к вашим услугам")

stop_listening = r.listen_in_background(m, callback)
while True: time.sleep(0.1)
